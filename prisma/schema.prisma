generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  role            ROLE
  contactNo       String
  address         String
  profileImg      String
  orders          Order[]
  ReviewAndRating ReviewAndRating[]

  @@map("users")
}

model Category {
  id    String @id @default(uuid())
  title String
  books Book[]

  @@map("categories")
}

model Book {
  id              String            @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate DateTime
  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      String
  reviews         ReviewAndRating[]
  orderedBooks    OrderedBooks[]

  @@map("books")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int
  user   User   @relation(fields: [userId], references: [id])
  userId String
  book   Book   @relation(fields: [bookId], references: [id])
  bookId String

  @@map("reviews_and_ratings")
}

model OrderedBooks {
  id       String @id @default(uuid())
  book     Book   @relation(fields: [bookId], references: [id])
  bookId   String
  quantity Int
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String

  @@map("ordered_books")
}

model Order {
  id           String         @id @default(uuid())
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  orderedBooks OrderedBooks[]
  status       ORDER_STATUS   @default(pending)
  createdAt    DateTime       @default(now())

  @@map("orders")
}

enum ORDER_STATUS {
  pending
  shipped
  delivered
}

enum ROLE {
  admin
  customer
}
