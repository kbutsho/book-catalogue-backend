generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String            @id @default(uuid())
  name       String
  email      String            @unique
  password   String
  role       ROLE              @default(customer)
  contactNo  String
  address    String
  profileImg String
  reviews    ReviewAndRating[]
  orders     Order[]
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id              String            @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate DateTime
  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      String
  reviews         ReviewAndRating[]
  orderedBooks    OrderedBooks[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderedBooks {
  id        String   @id @default(uuid())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    String
  quantity  Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id           String         @id @default(uuid())
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  orderedBooks OrderedBooks[]
  status       ORDER_STATUS   @default(pending)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

enum ORDER_STATUS {
  pending
  shipped
  delivered
}

enum ROLE {
  admin
  customer
}
